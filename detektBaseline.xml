<?xml version="1.0" ?>
<SmellBaseline>
  <Blacklist></Blacklist>
  <Whitelist>
    <ID>LongMethod:TransparentRunningRepository.kt$TransparentRunningRepository.Companion.&lt;no name provided&gt;$migrate</ID>
    <ID>MagicNumber:GPSLocationProvider.kt$GPSLocationProvider$3</ID>
    <ID>MagicNumber:TransparentRunningRepository.kt$TransparentRunningRepository.Companion.&lt;no name provided&gt;$3</ID>
    <ID>MagicNumber:TransparentRunningRepository.kt$TransparentRunningRepository.Companion.&lt;no name provided&gt;$4</ID>
    <ID>MagicNumber:TransparentRunningRepository.kt$TransparentRunningRepository.Companion.&lt;no name provided&gt;$5</ID>
    <ID>MagicNumber:TransparentRunningRepository.kt$TransparentRunningRepository.Companion.&lt;no name provided&gt;$6</ID>
    <ID>MaxLineLength:TransparentRunningRepository.kt$TransparentRunningRepository.Companion.&lt;no name provided&gt;$" \t\t\t\tLEFT JOIN LocationPoint lp ON lp.roundedElapsedTime = xvt.xVal AND lp.sessionId = ${id}\n"</ID>
    <ID>MaxLineLength:TransparentRunningRepository.kt$TransparentRunningRepository.Companion.&lt;no name provided&gt;$"INSERT INTO LocationPoint(sessionId, time, elapsedTime, latitude, longitude, altitude, speed, elapsedDistance, roundedElapsedTime, isSimulated)\n"</ID>
    <ID>MaxLineLength:TransparentRunningRepository.kt$TransparentRunningRepository.Companion.&lt;no name provided&gt;$"\t\tELSE CAST(minElapsedTime-(minElapsedTime-maxElapsedTime*1.0)/(minRoundedElapsedTime-maxRoundedElapsedTime)*(minRoundedElapsedTime-xVal) AS INT)\n"</ID>
    <ID>MaxLineLength:TransparentRunningRepository.kt$TransparentRunningRepository.Companion.&lt;no name provided&gt;$"\t\tELSE CAST(minTime-(minTime-maxTime*1.0)/(minRoundedElapsedTime-maxRoundedElapsedTime)*(minRoundedElapsedTime-xVal) AS INT)\n"</ID>
    <ID>MaxLineLength:TransparentRunningRepository.kt$TransparentRunningRepository.Companion.&lt;no name provided&gt;$"\t\tELSE minAltitude-(minAltitude-maxAltitude*1.0)/(minRoundedElapsedTime-maxRoundedElapsedTime)*(minRoundedElapsedTime-xVal)\n"</ID>
    <ID>MaxLineLength:TransparentRunningRepository.kt$TransparentRunningRepository.Companion.&lt;no name provided&gt;$"\t\tELSE minElapsedDistance-(minElapsedDistance-maxElapsedDistance*1.0)/(minRoundedElapsedTime-maxRoundedElapsedTime)*(minRoundedElapsedTime-xVal)\n"</ID>
    <ID>MaxLineLength:TransparentRunningRepository.kt$TransparentRunningRepository.Companion.&lt;no name provided&gt;$"\t\tELSE minLatitude-(minLatitude-maxLatitude*1.0)/(minRoundedElapsedTime-maxRoundedElapsedTime)*(minRoundedElapsedTime-xVal)\n"</ID>
    <ID>MaxLineLength:TransparentRunningRepository.kt$TransparentRunningRepository.Companion.&lt;no name provided&gt;$"\t\tELSE minLongitude-(minLongitude-maxLongitude*1.0)/(minRoundedElapsedTime-maxRoundedElapsedTime)*(minRoundedElapsedTime-xVal)\n"</ID>
    <ID>MaxLineLength:TransparentRunningRepository.kt$TransparentRunningRepository.Companion.&lt;no name provided&gt;$"\t\tELSE minSpeed-(minSpeed-maxSpeed*1.0)/(minRoundedElapsedTime-maxRoundedElapsedTime)*(minRoundedElapsedTime-xVal)\n"</ID>
    <ID>MaxLineLength:TransparentRunningRepository.kt$TransparentRunningRepository.Companion.&lt;no name provided&gt;$database.execSQL("CREATE TABLE IF NOT EXISTS `LocationPoint` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `sessionId` INTEGER NOT NULL, `time` INTEGER NOT NULL, `elapsedTime` INTEGER NOT NULL, `roundedElapsedTime` INTEGER NOT NULL, `latitude` REAL NOT NULL, `longitude` REAL NOT NULL, `altitude` REAL NULL, `speed` REAL NULL, `bearing` REAL NULL, `elapsedDistance` REAL NOT NULL, `horizontalAccuracy` REAL NULL, `verticalAccuracy` REAL NULL, `speedAccuracy` REAL NULL, `bearingAccuracy` REAL NULL, `isSimulated` INTEGER NOT NULL, FOREIGN KEY(`sessionId`) REFERENCES `WorkoutSession`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )")</ID>
    <ID>MaxLineLength:TransparentRunningRepository.kt$TransparentRunningRepository.Companion.&lt;no name provided&gt;$database.execSQL("INSERT INTO LocationPoint(`id`, `sessionId`, `time`, `elapsedTime`, `roundedElapsedTime`, `latitude`, `longitude`, `altitude`, `speed`, `elapsedDistance`, `isSimulated` ) SELECT `id`, `sessionId`, `time`, `elapsedTime`, `roundedElapsedTime`, `latitude`, `longitude`, `altitude`, `speed`, `elapsedDistance`, `isSimulated` FROM LocationPointTemp")</ID>
    <ID>TooManyFunctions:GPSForegroundService.kt$GPSForegroundService$GPSForegroundService</ID>
  </Whitelist>
</SmellBaseline>
